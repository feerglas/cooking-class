---
import Layout from '../layouts/Layout.astro';
import {
  getLangFromUrl,
  getStaticPathsForPage,
  languages,
  // useTranslations,
} from '../i18n/utils';
import Autocomplete from '../components/Autocomplete/Autocomplete';
import LanguagePicker from '../components/Dropdown/Dropdown';

import { ingredientsData } from '../data/ingredients';
import { prepareIngredientsForAutocomplete } from '../data/dataHelper';
// import Badge from '../components/Badge/Badge.astro';

export const getStaticPaths = getStaticPathsForPage;

const currentLang = getLangFromUrl(Astro.url);
// const t = useTranslations(lang);
const ingredientsRaw = await ingredientsData();
const ingredients = prepareIngredientsForAutocomplete(ingredientsRaw, currentLang);

const langItems = Object.entries(languages)
  .map(([
    link,
    label,
  ]) => ({
    icon: link,
    label,
    link: `/${link}`,
  }))
  .filter((item) => item.icon !== currentLang);

---

<Layout title="Cooking class generator">
  <main>

    <LanguagePicker
      client:load
      button={{
        color: 'primary',
        iconAfter: false,
        iconBefore: currentLang,
        label: currentLang,
        size: 's',
      }}
      items={langItems}
    />

    <Autocomplete
      client:load
      input={{
        closeButton: true,
        dropdown: {
          button: {
            click: false,
            color: 'gray',
            iconAfter: 'arrowDown',
            iconBefore: false,
            label: 'Alle',
            noRightBorderRadius: true,
            size: 'l',
          },
          items: [
            {
              radio: {
                checked: true,
                id: 'all',
                label: 'Alle',
                name: 'radio-name',
                value: 'all',
              },
            },
            {
              radio: {
                checked: false,
                id: 'radio-id-1',
                label: 'Vegetables',
                name: 'radio-name',
                value: 'vegetables',
              },
            },
            {
              radio: {
                checked: false,
                id: 'radio-id-2',
                label: 'Fruits',
                name: 'radio-name',
                value: 'fruits',
              },
            },
            {
              radio: {
                checked: false,
                id: 'radio-id-3',
                label: 'Herbs',
                name: 'radio-name',
                value: 'herbs',
              },
            },
          ],
        },
        id: 'input-id',
        label: false,
        placeholder: 'Zutaten durchsuchen',
      }}
      items={ingredients}
    />

    <!--
    <div class="foo">
      {ingredients.map((ingredient) => (
        <p>{ingredient[lang]}</p>
      ))}
    </div>
    -->
    <!-- <p>new localized index {t('nav.foo')}</p> -->
  </main>
</Layout>
